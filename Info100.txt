hgvphvprhnvo[hjrovhoihvioherwvo[ijh[ojrv
wevrqrewbrnb enbrenfefbhebrbvewgb
berberbnernbke[oijbjheoribhjoriejhboi[erb
rewgbjrobihjnb9uihrbiojhroi[gjwreoi[gje
wegkoijbvr[jgioprjgo[ijeoi[jgoejbvo[ijeo


rmvo[rejwbv[ovbjre[obewo[bjo[rebj[ebw
brmrewo[bn[oernbo[fenkjnm[rfjmngo[imj[og
rk[erjwbvj[oibje[objwro[igjo[ibmeo[rijmbgo[


adddddddddddddddddddddddd

git config --global --list показать параметры пользователя
git config --global user.name 'Valik' установить имя. Так само email и т.д.
git init инициализация репозитория в выбранной папке
git status узнать ситуацию в папке репозитория
git add . добавить все файлы в папке в обработку гита
git commit -m'massage' закомитить все изменения и написать комментарий для других в кавычках
git commit -a -m'massage' добавить, закоммитить и написать комментарий (при изменениях уже5 существующих файлов в репозитории
git log посмотреть список всех изменений в репозитории и их время и кто сделал
git log -p посмотреть подробности про последнее изменение, затем нужно нажать ctrl+c, чтоб дальше работать с консолью
git add . если в проекте уже добавлены элементы, но они изменены, они показываются красным, можно их добавить в список возможного коммита таким образом, но не закомитить,
а чтоб вынести какой-то из файлов из коммита, нужно написать: git reset HEAD name.html (имя и расширение исключаемого из коммита файла).
git log -2 будет выводить только два последних коммита

git clone [ссылка на репозиторий в инете] в новой папке склонирует репозиторий в данную папку новому челику

git branch показывает все ветки проекта и на какой сейчас находимся
git branch name создает новую ветку, но мы остаемся на прежней
git checkout name перейти на указанную ветку
git merge name слиять другую ветку с той, на которой находишься сам
git branch -d name удалить ветку
git checkout -b name создать новую ветку и сразу перейти в нее

git remote -v получить данные о репозитории
git pull принять изменения